function solution(n, k, enemy) {
   var max__index=0;
    if(enemy.length<= k){
        return enemy.length
    }
    
    const go_right= function(arr){
         arr.sort((a,b)=>b-a);
           var n_remain=k;
           var total_n= n;
        
         for(var i=0; i<arr.length; i++){
           if(n_remain>0){
               n_remain-=1;
               continue;
           }
             // 아닌경우 
             total_n-=arr[i];
             if(total_n<0){
                 return false;
             }
         }
        return true;
    }
    
    var left=0; 
    var right= enemy.length-1;
     while(left<=right){
       
         var mid= Math.floor((right+left)/2);
         var cehck_=go_right(enemy.slice(0,mid));
         if(cehck_==true){
            
             left= mid+1;
         }
         else if ( cehck_==false){
             right= mid-1;
             
         }
     }

     return (left==enemy.length? left:left-1 )
    
  
}

